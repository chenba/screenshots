#!/usr/bin/env bash

set -e

NODE_PATH="server/node_modules:$NODE_PATH"
PATH="server/node_modules/.bin/:$PATH"
project_name="$1"
shift
cmd="$1"
shift

depfile() {
  echo "./build/dependency-cache/${project_name}-dependencies.txt"
}

getdeps() {
  file="$(depfile)"
  if [[ -e $file ]] ; then
    # Test that all the files actually exist...
    for filename in $(cat $file) ; do
      if [[ ! -e $filename ]] ; then
        echo "$@"
        return
      fi
    done
    cat < $file
  else
    echo "$@"
  fi
}

build() {
  dest="build/server/static/js/${project_name}-bundle.js"
  mkdir -p "$(dirname "$(depfile)")"
  echo -n "Building $(basename $dest): deps... "
  NODE_PATH="$NODE_PATH" browserify --list -e "$@" | sed "s!$(pwd)/!!g" | grep -v build-time > "$(depfile)"
  if egrep -qv "^(build|server/node_modules)/" "$(depfile)" ; then
    echo
    echo "error: $@ or its deps import files outside build/ or server/node_modules/:"
    egrep -v "^(build|server/node_modules)/" "$(depfile)"
    echo "failed."
    exit 2
  fi
  echo -n "bundle... "
  PATH="$PATH" NODE_PATH="$NODE_PATH" NODE_ENV="${NODE_ENV:-production}" browserify \
    -g [ envify --NODE_ENV $NODE_ENV ] \
    $( [[ -z $NO_UGLIFY ]] && printf %s '-g uglifyify' ) \
    -e "$@" \
    | NODE_PATH="$NODE_PATH" uglifyjs --compress --mangle > "$dest"

  if [[ -z "$NO_UGLIFY" ]] ; then
    echo -n "minimizing... "
    NODE_PATH="$NODE_PATH" uglifyjs -c -o "$dest" "$dest"
  fi
  echo "done."
}

case "$cmd" in
  -h|--help|help|"")
    echo "This is a build script for the Makefile"
    exit 2
    ;;
  getdeps)
    getdeps "$@"
    ;;
  build)
    build "$@"
    ;;
  *)
    echo "Unknown command: $cmd"
    exit 2
    ;;
esac
